name: Run tests

on:
  pull_request:
    branches: ["main"]

env:
  XCODE_PROJECT: TemplateApp.xcodeproj
  SCHEME: TemplateApp
  TEST_PLAN: AllTests
  TEST_RESULT_BUNDLE: TestResults.xcresult

jobs:
  build:
    name: Run tests
    runs-on: [macos-latest]
  
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - uses: maxim-lobanov/setup-xcode@v1
      with:
        xcode-version: latest-stable

    - name: Cache Swift Package Manager dependencies
      uses: actions/cache@v4
      with:
        path: ${{ runner.temp }}/SourcePackages
        key: ${{ runner.os }}-spm-${{ hashFiles('**/Package.resolved') }}
        restore-keys: |
          ${{ runner.os }}-spm-

    - name: Install Swift packages
      run: |
        xcodebuild -project "${{ env.XCODE_PROJECT }}" \
          -scheme "${{ env.SCHEME }}" \
          -onlyUsePackageVersionsFromResolvedFile \
          -resolvePackageDependencies \
          -clonedSourcePackagesDirPath "${{ runner.temp }}/SourcePackages"

    - name: Determine test device
      run: |
        echo "PLATFORM=iOS Simulator" >> "$GITHUB_ENV"
        # xcrun xctrace returns via stderr, not the expected stdout (see https://developer.apple.com/forums/thread/663959)
        echo "DEVICE=$(xcrun xctrace list devices 2>&1 | grep -oE 'iPhone.*?[^\(]+' | head -1 | awk '{$1=$1;print}' | sed -e "s/ Simulator$//")" >> "$GITHUB_ENV"

    - name: Build for testing
      run: |
        xcodebuild build-for-testing -project "${{ env.XCODE_PROJECT }}" \
          -scheme "${{ env.SCHEME }}" \
          -destination "platform=$PLATFORM,name=$DEVICE" \
          -clonedSourcePackagesDirPath "${{ runner.temp }}/SourcePackages" \
          -disableAutomaticPackageResolution

    - name: Run tests
      run: |
        xcodebuild test-without-building -project "${{ env.XCODE_PROJECT }}" \
          -scheme "${{ env.SCHEME }}" \
          -testPlan "${{ env.TEST_PLAN }}" \
          -destination "platform=$PLATFORM,name=$DEVICE" \
          -resultBundlePath "${{ env.TEST_RESULT_BUNDLE }}" \
          -clonedSourcePackagesDirPath "${{ runner.temp }}/SourcePackages" \
          -disableAutomaticPackageResolution

    - name: Upload test result bundle
      uses: actions/upload-artifact@v4
      if: ${{ failure() }}
      with:
        name: ${{ env.SCHEME }}-${{ github.sha }}.xcresult
        path: ${{ env.TEST_RESULT_BUNDLE }}
